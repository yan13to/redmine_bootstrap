<%= fields_for :issue, @issue, builder: BootstrapFormBuilder do |f| %>

  <% if @issue.safe_attribute?('status_id') && @allowed_statuses.present? %>
    <%= f.select_form_group :status_id, @allowed_statuses.collect {|p| [p.name, p.id]}, { required: true }, onchange: "updateIssueFrom('#{escape_javascript(update_issue_form_path(@project, @issue))}', this)" %>
    <% if @issue.transition_warning %>
      <span class="icon-only icon-warning" title="<%= @issue.transition_warning %>"><%= @issue.transition_warning %></span>
    <% end %>
    <%= hidden_field_tag 'was_default_status', @issue.status_id, id: nil if @issue.status == @issue.default_status %>
  <% else %>
    <label><%= l(:field_status) %></label> <%= @issue.status %>
  <% end %>

  <% if @issue.safe_attribute? 'priority_id' %>
    <%= f.select_form_group :priority_id, @priorities.collect {|p| [p.name, p.id]}, required: true %>
  <% end %>

  <% if @issue.safe_attribute? 'assigned_to_id' %>
    <%= f.select_form_group :assigned_to_id, principals_options_for_select(@issue.assignable_users, @issue.assigned_to), include_blank: true, required: @issue.required_attribute?('assigned_to_id') %>
    <% if @issue.assignable_users.include?(User.current) %>
      <a class="assign-to-me-link<%= ' hidden' if @issue.assigned_to_id == User.current.id %>" href="#" data-id="<%= User.current.id %>">
        <%= l(:label_assign_to_me) %>
      </a>
    <% end %>
  <% end %>

  <% if @issue.safe_attribute?('category_id') && @issue.project.issue_categories.any? %>
    <%= f.select_form_group :category_id, @issue.project.issue_categories.collect {|c| [c.name, c.id]}, { include_blank: true, required: @issue.required_attribute?('category_id') }, onchange: ("updateIssueFrom('#{escape_javascript(update_issue_form_path(@project, @issue))}', this)" if @issue.new_record?) %>
    <%= link_to(l(:label_issue_category_new), new_project_issue_category_path(@issue.project),
                remote: true,
                method: 'get',
                title: l(:label_issue_category_new),
                tabindex: 200
              ) if User.current.allowed_to?(:manage_categories, @issue.project) %>
  <% end %>

  <% if @issue.safe_attribute?('fixed_version_id') && @issue.assignable_versions.any? %>
    <%= f.select_form_group :fixed_version_id, version_options_for_select(@issue.assignable_versions, @issue.fixed_version), include_blank: true, required: @issue.required_attribute?('fixed_version_id') %>
    <%= link_to(l(:label_version_new), new_project_version_path(@issue.project),
                remote: true,
                method: 'get',
                title: l(:label_version_new),
                tabindex: 200
              ) if User.current.allowed_to?(:manage_versions, @issue.project) %>
  <% end %>

  <% if @issue.safe_attribute? 'parent_issue_id' %>
    <%= f.text_field_form_group :parent_issue_id, size: 10, required: @issue.required_attribute?('parent_issue_id'), onchange: "updateIssueFrom('#{escape_javascript update_issue_form_path(@project, @issue)}', this)" %>
    <%= javascript_tag "observeAutocompleteField('issue_parent_issue_id', '#{escape_javascript(auto_complete_issues_path(project_id: @issue.project, scope: Setting.cross_project_subtasks, status: @issue.closed? ? 'c' : 'o', issue_id: @issue.id))}')" %>
  <% end %>

  <% if @issue.safe_attribute? 'start_date' %>
    <p id="start_date_area">
      <%= f.date_field_form_group :start_date, size: 10, required: @issue.required_attribute?('start_date') %>
      <%= calendar_for('issue_start_date') %>
    </p>
  <% end %>

  <% if @issue.safe_attribute? 'due_date' %>
    <p id="due_date_area">
      <%= f.date_field_form_group :due_date, size: 10, required: @issue.required_attribute?('due_date') %>
      <%= calendar_for('issue_due_date') %>
    </p>
  <% end %>

  <% if @issue.safe_attribute? 'estimated_hours' %>
    <%= f.text_field_form_group :estimated_hours, value: format_hours(f.object.estimated_hours), size: 3, required: @issue.required_attribute?('estimated_hours'), input_group_text: l(:field_hours) %>
  <% end %>

  <% if @issue.safe_attribute?('done_ratio') && Issue.use_field_for_done_ratio? %>
    <%= f.select_form_group :done_ratio, (0..10).to_a.collect {|r| ["#{r*10} %", r*10] }, required: @issue.required_attribute?('done_ratio') %>
  <% end %>

  <% if @issue.safe_attribute? 'custom_field_values' %>
    <%= render 'issues/form_custom_fields' %>
  <% end %>

<% end %>

<% include_calendar_headers_tags %>
