<%= fields_for :issue, @issue, builder: PageFormBuilder do |f| %>
  <%= call_hook(:view_issues_form_details_top, { issue: @issue, form: f }) %>
  <%= hidden_field_tag 'form_update_triggered_by', '' %>
  <%= hidden_field_tag 'back_url', params[:back_url] if params[:back_url].present? %>
  <% projects = projects_for_select(@issue) %>
  <%= page_paragraph do %>
    <%= f.page_select :project_id, project_tree_options_for_select(projects, selected: @issue.project), { required: true }, onchange: "updateIssueFrom('#{escape_javascript update_issue_form_path(@project, @issue)}', this)" %>
  <% end if (@issue.safe_attribute?('project_id') || @issue.project_id_changed?) && (@project.nil? || projects.length > 1 || @issue.copy?) %>
  <%= page_paragraph do %>
    <%= f.page_check_box :is_private, label: l(:field_is_private) %>
  <% end if @issue.safe_attribute? 'is_private' %>
  <%= page_paragraph do %>
    <%= f.page_select :tracker_id, trackers_options_for_select(@issue), { required: true }, onchange: "updateIssueFrom('#{escape_javascript update_issue_form_path(@project, @issue)}', this)", title: @issue.tracker.description %>
    <%= content_tag 'a', l(:label_open_trackers_description), class: 'icon-only icon-help', title: l(:label_open_trackers_description), onclick: "showModal('trackers_description', '500px'); return false;", href: '#' if trackers_for_select(@issue).any? {|t| t.description.present? } %>
    <%= render 'issues/trackers_description', trackers: trackers_for_select(@issue) %>
  <% end if @issue.safe_attribute?('tracker_id') || (@issue.persisted? && @issue.tracker_id_changed?) %>
  <%= page_paragraph do %>
    <%= f.page_text_field :subject, size: 80, maxlength: 255, required: true %>
  <% end if @issue.safe_attribute? 'subject' %>
  <%= page_paragraph do %>
    <%= link_to_function content_tag(:span, l(:button_edit), class: 'icon icon-edit'), '$(this).hide(); $("#issue_description_and_toolbar").show()' unless @issue.new_record? %>
    <%= content_tag 'span', id: "issue_description_and_toolbar", style: (@issue.new_record? ? nil : 'display:none') do %>
      <%= f.page_text_area :description, cols: 60, accesskey: accesskey(:edit), class: 'wiki-edit', rows: [[10, @issue.description.to_s.length / 50].max, 20].min, data: { auto_complete: true, }, required: @issue.required_attribute?('description') %>
    <% end %>
    <%= wikitoolbar_for 'issue_description', preview_issue_path(project_id: @issue.project, issue_id: @issue.id) %>
  <% end if @issue.safe_attribute? 'description' %>
  <%= render 'issues/attributes' %>
  <%= call_hook(:view_issues_form_details_bottom, { issue: @issue, form: f }) %>
<% end %>
<% heads_for_wiki_formatter %>
<%= heads_for_auto_complete(@issue.project) %>
